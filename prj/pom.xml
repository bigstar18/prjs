<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.hxx</groupId>
	<artifactId>parent</artifactId>
	<version>0.0.1</version>
	<packaging>pom</packaging>

	<name>parent</name>
	<modules>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>
		<slf4j.version>1.7.12</slf4j.version>
		<logback.version>1.1.2</logback.version>
	</properties>

	<!-- 
	Remote URL: https://repository.cloudera.com/artifactory/cloudera-repos/
	Remote URL: http://repository.sonatype.org/content/groups/public/
	Remote URL: http://repository.jboss.com/maven2/
	
	 -->

	<!-- 设定除中央仓库 (repo1.maven.org/maven2/)外的其他仓库,按设定顺序进行查询，如有Nexus私服, 取消注释并指向正确的服务器地址 -->
	<repositories>
		<repository>
			<id>public</id>
			<name>local</name>
			<url>http://10.0.100.178:8081/nexus/content/groups/public/</url>
		</repository>
	</repositories>
	<!-- 如有Nexus私服, 取消注释并指向正确的服务器地址 -->
	<pluginRepositories>
		<pluginRepository>
			<id>public</id>
			<name>local</name>
			<url>http://10.0.100.178:8081/nexus/content/groups/public/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<!-- 自动打包 -->
	<distributionManagement>
		<repository>
			<id>releases</id><!--这个ID需要与你的release仓库的Repository ID一致 -->
			<url>http://10.0.100.178:8081/nexus/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id><!--这个ID需要与你的snapshots仓库的Repository ID一致 -->
			<url>http://10.0.100.178:8081/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>

			<!-- LOGGING begin -->
			<!-- slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- logback -->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>

			<!-- 代码直接调用log4j会被桥接到slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- 代码直接调用commons-logging会被桥接到slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- 代码直接调用java.util.logging会被桥接到slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- log4jdbc -->
			<dependency>
				<groupId>com.googlecode.log4jdbc</groupId>
				<artifactId>log4jdbc</artifactId>
				<version>1.2</version>
				<scope>runtime</scope>
			</dependency>
			<!-- LOGGING end -->

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.3</version>
			</dependency>
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>1.7.2</version>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>1.3.1</version>
			</dependency>
			<dependency>
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>4.1.6.RELEASE</version>
				<exclusions>
					<exclusion>
						<artifactId>spring-aop</artifactId>
						<groupId>org.springframework</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-webapp</artifactId>
				<version>8.1.17.v20150415</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-jsp</artifactId>
				<version>8.1.17.v20150415</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<groupId>com.microsoft</groupId>
				<artifactId>sqljdbc</artifactId>
				<version>4.2</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- compiler插件, 设定JDK版本 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<!-- <showWarnings>true</showWarnings> -->
						<compilerArguments>
							<bootclasspath>${java.home}/lib/rt.jar;${java.home}/lib/jce.jar</bootclasspath>
						</compilerArguments>
					</configuration>
				</plugin>
				<!-- war打包插件, 设定war包名称不带版本号 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.5.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<plugin>
					<!-- <groupId>org.eclipse.jetty</groupId> <version>9.2.10.v20150310</version> -->
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>8.1.16.v20140903</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>


<!-- install jar to local repository -->
<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-install-plugin</artifactId> 
	<executions> <execution> <phase>install</phase> <goals> <goal>install-file</goal> 
	</goals> <configuration> <packaging>jar</packaging> <artifactId>${project.artifactId}</artifactId> 
	<groupId>${project.groupId}</groupId> <version>${project.version}</version> 
	<file> ${project.build.directory}/${project.artifactId}-${project.version}.jar 
	</file> </configuration> </execution> </executions> </plugin> deploy jar 
	to remote repository <plugin> <groupId>org.apache.maven.plugins</groupId> 
	<artifactId>maven-deploy-plugin</artifactId> <executions> <execution> <phase>deploy</phase> 
	<goals> <goal>deploy-file</goal> </goals> <configuration> <packaging>jar</packaging> 
	<generatePom>true</generatePom> <url>${project.distributionManagement.repository.url}</url> 
	<artifactId>${project.artifactId}</artifactId> <groupId>${project.groupId}</groupId> 
	<version>${project.version}</version> <file>${project.build.directory}/${project.artifactId}.jar</file> 
	</configuration> </execution> </executions> </plugin> -->
<!-- <resources> <resource> <directory>${project.basedir}/src/main/resources</directory> 
	<filtering>true</filtering> </resource> </resources> -->
<!-- <profiles> <profile> <id>local</id> <build> <filters> <filter>${basedir}/profiles/${build.profile.id}/*.properties</filter> 
	</filters> </build> </profile> <profile> <id>online</id> <activation> <activeByDefault>true</activeByDefault> 
	</activation> <build> <filters> <filter>${basedir}/profiles/${build.profile.id}/*.properties</filter> 
	</filters> </build> </profile> </profiles> -->  
